{"version":3,"sources":["components/addCategory.js","Helpers/getGif.js","components/gifGriddItem.js","components/gifGridd.js","Hooks/useFetchGIf.js","gifExpert.js","index.js"],"names":["AddCategory","setCategories","useState","state","setstate","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","getGif","category","a","url","fetch","res","json","data","gifs","map","img","id","title","images","downsized","GifGriddItem","className","src","alt","GifGridd","loading","real","realCambio","useEffect","then","console","log","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAoDeA,EAhDM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEZC,mBAAS,IAFG,mBAE/BC,EAF+B,KAExBC,EAFwB,KA6BtC,OACI,sBAAMC,SAjBO,SAACC,GAEdA,EAAEC,iBAECJ,EAAMK,OAAS,GAEdP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAeM,QAWrC,SACQ,uBACAC,KAAK,OACLC,MAAOR,EACPS,SA9BO,SAACN,GAIhBF,EAASE,EAAEO,OAAOF,a,+BCZbG,EAAM,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,gDAEkCF,EAFlC,+DAGAG,MAAMD,GAHN,cAGXE,EAHW,gBAIMA,EAAIC,OAJV,uBAITC,EAJS,EAITA,KAEFC,EAAMD,EAAKE,KAAI,SAAAC,GAEjB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVC,OAAOH,EAAIG,OAAOC,UAAUX,QAXnB,kBAiBVK,GAjBU,4CAAF,sDCEZ,SAASO,EAAT,GAA4C,EAArBL,IAAsB,IAAjBE,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,OAGtC,OACI,sBAAKG,UAAU,yCAAf,UACK,qBAAKC,IAAKJ,EAAQK,IAAKN,IAEvB,mBAAGI,UAAU,wCAAb,SAAsDJ,OCL5D,IAAMO,EAAW,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECAZ,SAACA,GAAY,IAAD,EAETb,mBAAS,CAEhCmB,KAAK,GACLa,SAAQ,IALwB,mBAE7BC,EAF6B,KAEvBC,EAFuB,KA6BpC,OArBEC,qBAAU,WAERvB,EAAOC,GACFuB,MAAK,SAAAd,GACFe,QAAQC,IAAIhB,GAEZiB,YAAW,WAEPL,EAAW,CAGPf,KAAKG,EACLU,SAAQ,MAIb,UAGZ,CAACnB,IAEGoB,EDzBeO,CAAa3B,GAA7BM,EAJ8B,EAI9BA,KAAMa,EAJwB,EAIxBA,QAWZ,OACI,qCACI,6BAAKnB,IAML,sBAAKe,UAAU,YAAf,UAEKI,GAAW,wCAGZb,EAAKE,KAAI,SAAAC,GAAG,OAER,cAACK,EAAD,eAGML,GAFCA,EAAIC,cEgChBkB,EApDM,WAAK,IAAD,EAEazC,mBAAS,CAAC,aAFvB,mBAEd0C,EAFc,KAEF3C,EAFE,KAiBrB,OAEI,qCAIQ,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAI5B,uBAEI,6BAEQ2C,EAAWrB,KAAI,SAAAR,GAAQ,OAEpB,cAAC,EAAD,CAIAA,SAAUA,GAFLA,Y,MC9CpC8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.12d16976.chunk.js","sourcesContent":["\r\nimport React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n const AddCategory = ({setCategories}) => {\r\n\r\n    const [state, setstate] = useState('');\r\n\r\n    const cambioTexto= (e)=>{\r\n\r\n        //console.log(e.target.value);\r\n\r\n        setstate(e.target.value)\r\n\r\n\r\n    }\r\n\r\n    const pushEnter= (e)=>{\r\n\r\n        e.preventDefault();\r\n\r\n        if(state.length > 2){\r\n\r\n            setCategories(cats => [state, ...cats])\r\n\r\n        }\r\n\r\n      \r\n\r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={pushEnter}>\r\n                <input\r\n                type=\"text\" \r\n                value={state}\r\n                onChange={cambioTexto}\r\n                \r\n                \r\n                />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\nexport default AddCategory\r\n\r\n\r\n","export const getGif= async(category)=>{\r\n\r\n    const url=`http://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=pbVSppZy7ITGJ1zu3k0Y62deBZ9V9Gt3`;\r\n    const res= await fetch(url);\r\n    const { data } = await res.json();\r\n\r\n    const gifs= data.map(img =>{\r\n\r\n        return{\r\n            id: img.id,\r\n            title:img.title,\r\n            images:img.images.downsized.url\r\n        }\r\n    })\r\n\r\n    //console.log(gifs);\r\n\r\n    return gifs;\r\n    //gifImageState(gifs);\r\n\r\n}","import React from 'react'\r\n\r\nexport function GifGriddItem({img, title, images}) {\r\n\r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n             <img src={images} alt={title} />\r\n\r\n             <p className=\"animate__animated animate__fadeInLeft\">{title}</p>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../Hooks/useFetchGIf';\r\nimport { GifGriddItem } from './gifGriddItem';\r\n\r\nexport const GifGridd = ({category}) => {\r\n\r\n    \r\n\r\n   const {data, loading}= useFetchGifs(category);\r\n\r\n   \r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n\r\n\r\n           \r\n                \r\n            <div className=\"card-grid\">\r\n\r\n                {loading && <p>loading</p>}\r\n\r\n            {\r\n                data.map(img=>(\r\n\r\n                    <GifGriddItem\r\n                      key={img.id}  \r\n\r\n                      {...img}\r\n\r\n                    \r\n                    />\r\n                    \r\n                ))\r\n            }\r\n                  \r\n            \r\n                \r\n                    \r\n            </div>\r\n                    \r\n                \r\n           \r\n           \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGif } from '../Helpers/getGif';\r\n\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const [real, realCambio] = useState({\r\n\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n      useEffect(() => {\r\n        \r\n        getGif(category)\r\n            .then(img=>{\r\n                console.log(img)\r\n\r\n                setTimeout(() => {\r\n\r\n                    realCambio({\r\n\r\n                    \r\n                        data:img,\r\n                        loading:false\r\n    \r\n                    })\r\n                    \r\n                }, 3000);\r\n               \r\n            })\r\n    }, [category])\r\n\r\n    return real;\r\n}","import React, { Fragment, useState } from 'react'\r\nimport  AddCategory  from './components/addCategory';\r\nimport { GifGridd } from './components/gifGridd';\r\n/* tslint:disable:no-unused-variable */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n const GifExpertApp= ()=>{\r\n\r\n    const [categories, setCategories]=useState(['OnePunch']);\r\n\r\n   //const handled= ()=>{\r\n\r\n      //para agregar una categoria con el operador express ... osea los 3 puntos\r\n\r\n      //setCategories([...categories, 'MonsterHunter'])\r\n\r\n     // setCategories(cats => [...cats, 'MonsterHunter'])\r\n\r\n\r\n\r\n\r\n    //}\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n              \r\n\r\n                <h2>GitExpertApp</h2>\r\n\r\n                <AddCategory setCategories={setCategories}/>\r\n                \r\n\r\n\r\n                <hr />\r\n\r\n                    <ol>\r\n                        {\r\n                            categories.map(category =>(\r\n\r\n                               <GifGridd \r\n\r\n                               key={category}\r\n                               \r\n                               category={category}/>\r\n                            ))\r\n                        }\r\n                    </ol>\r\n\r\n\r\n\r\n        </>\r\n     \r\n    );\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './gifExpert';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n//GifExpertApp\n//<h2>GifExpertApp</h2>\n//<hr />\n\n"],"sourceRoot":""}